// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Account {
//   id                 String    @id @default(cuid())
//   compoundId         String    @unique @map(name: "compound_id")
//   userId             Int       @map(name: "user_id")
//   providerType       String    @map(name: "provider_type")
//   providerId         String    @map(name: "provider_id")
//   providerAccountId  String    @map(name: "provider_account_id")
//   refreshToken       String?   @map(name: "refresh_token")
//   accessToken        String?   @map(name: "access_token")
//   accessTokenExpires DateTime? @map(name: "access_token_expires")
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?
//   session_state      String?
//   createdAt          DateTime  @default(now())
//   updatedAt          DateTime  @updatedAt

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([providerId, providerAccountId])
//   @@index([providerAccountId], name: "providerAccountId")
//   @@index([providerId], name: "providerId")
//   @@index([userId], name: "userId")
//   @@map(name: "accounts")
// }

model User {
  id            Int       @id @default(autoincrement())
  firstName     String?   @map("first_name")
  lastName      String?   @map("last_name")
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  image         String?
  // accounts      Account[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  role          Role      @default(USER)
  isAdmin       Boolean   @default(false) @map("is_admin")
  onboarded     Boolean   @default(false)
  // sessions      Session[]
  // accessToken   String        @unique

  @@index([firstName, lastName], name: "full_name")
  @@map(name: "users")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}
