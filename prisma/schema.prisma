// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  accessTokenExpires DateTime?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  // @@index([providerAccountId], name: "providerAccountId")
  // @@index([providerId], name: "providerId")
  // @@index([userId], name: "userId")
  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

model User {
  id               Int       @id @default(autoincrement())
  firstName        String?   @map("first_name")
  lastName         String?   @map("last_name")
  name             String?
  email            String?   @unique
  emailVerified    DateTime? @map("email_verified")
  password         String?
  image            String?
  createdAt        DateTime  @default(now()) @map(name: "created_at")
  updatedAt        DateTime  @updatedAt @map(name: "updated_at")
  role             Role      @default(USER)
  isAdmin          Boolean   @default(false) @map("is_admin")
  onboarded        Boolean   @default(false)
  resetToken       String?   @db.Text
  resetTokenExpiry Int?

  accounts Account[]
  @@index([firstName, lastName], name: "full_name")
  @@map(name: "users")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}
